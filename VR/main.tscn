[gd_scene load_steps=33 format=3 uid="uid://bpfb7ci4y11uu"]

[ext_resource type="Script" uid="uid://dorh0n60io8fu" path="res://main.gd" id="1_7mycd"]
[ext_resource type="PackedScene" uid="uid://diyu06cw06syv" path="res://addons/godot-xr-tools/player/player_body.tscn" id="1_lquwl"]
[ext_resource type="PackedScene" uid="uid://b4kad2kuba1yn" path="res://addons/godot-xr-tools/hands/scenes/lowpoly/left_hand_low.tscn" id="2_272bh"]
[ext_resource type="Script" uid="uid://dt6evloc677yn" path="res://xr_origin_3d.gd" id="2_efxa6"]
[ext_resource type="PackedScene" uid="uid://l2n30mpbkdyw" path="res://addons/godot-xr-tools/hands/scenes/lowpoly/right_hand_low.tscn" id="3_5vw27"]
[ext_resource type="PackedScene" uid="uid://bl2nuu3qhlb5k" path="res://addons/godot-xr-tools/functions/movement_direct.tscn" id="4_5vw27"]
[ext_resource type="Script" uid="uid://bybh8edth7egy" path="res://addons/godot-xr-tools/functions/function_pickup.gd" id="4_dg77c"]
[ext_resource type="PackedScene" uid="uid://b6bk2pj8vbj28" path="res://addons/godot-xr-tools/functions/movement_turn.tscn" id="5_kek77"]
[ext_resource type="Script" uid="uid://cna2i3kkiy68c" path="res://fall_catch_area.gd" id="12_w48qg"]
[ext_resource type="PackedScene" uid="uid://dnjnox14xynpo" path="res://assets/fence.blend" id="14_w48qg"]
[ext_resource type="PackedScene" uid="uid://bx323g2klhw7b" path="res://assets/stone1.blend" id="15_074og"]
[ext_resource type="PackedScene" uid="uid://4yk2wqtkohum" path="res://assets/stone2.blend" id="16_cegan"]
[ext_resource type="PackedScene" uid="uid://raexjciaoigx" path="res://assets/stone3.blend" id="17_82xsv"]
[ext_resource type="PackedScene" uid="uid://cm5hwabptuu71" path="res://till.tscn" id="17_yaehf"]
[ext_resource type="PackedScene" uid="uid://df12uttw5ko8h" path="res://small_island.tscn" id="18_074og"]
[ext_resource type="PackedScene" uid="uid://2ad852drnfl0" path="res://assets/tree1.blend" id="18_getpj"]
[ext_resource type="PackedScene" uid="uid://bpyaiuwkt0qru" path="res://bookshelf.tscn" id="19_82xsv"]
[ext_resource type="PackedScene" uid="uid://coeffy4kleftv" path="res://bridge.tscn" id="19_cegan"]
[ext_resource type="PackedScene" uid="uid://dm2scu8hnq6t0" path="res://assets/player_island.blend" id="20_82xsv"]

[sub_resource type="Shader" id="Shader_w48qg"]
code = "
// NOTE: Shader automatically converted from Godot Engine 4.4.1.stable's ProceduralSkyMaterial.

shader_type sky;
render_mode use_debanding;

uniform vec4 sky_top_color : source_color = vec4(0.385, 0.454, 0.55, 1.0);
uniform vec4 sky_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float sky_curve : hint_range(0, 1) = 0.15;
uniform float sky_energy = 1.0; // In Lux.
uniform sampler2D sky_cover : filter_linear, source_color, hint_default_black;
uniform vec4 sky_cover_modulate : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 ground_bottom_color : source_color = vec4(0.2, 0.169, 0.133, 1.0);
uniform vec4 ground_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float ground_curve : hint_range(0, 1) = 0.02;
uniform float ground_energy = 1.0;
uniform float sun_angle_max = 30.0;
uniform float sun_curve : hint_range(0, 1) = 0.15;
uniform float exposure : hint_range(0, 128) = 1.0;

uniform sampler2D cloud_texture;
uniform sampler2D cloud_texture2;
uniform vec2 cloud_direction;
uniform vec2 cloud_direction2;
uniform vec2 cloud_scale;
uniform float cloud_distance;
uniform float cloud_speed;
uniform float cloud_speed2;

void sky() {
	float v_angle = acos(clamp(EYEDIR.y, -1.0, 1.0));
	float c = (1.0 - v_angle / (PI * 0.5));
	vec3 sky = mix(sky_horizon_color.rgb, sky_top_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / sky_curve), 0.0, 1.0));
	sky *= sky_energy;

	if (LIGHT0_ENABLED) {
		float sun_angle = acos(dot(LIGHT0_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT0_SIZE) {
			sky = LIGHT0_COLOR * LIGHT0_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT0_SIZE) / (sun_angle_max - LIGHT0_SIZE);
			sky = mix(LIGHT0_COLOR * LIGHT0_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT1_ENABLED) {
		float sun_angle = acos(dot(LIGHT1_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT1_SIZE) {
			sky = LIGHT1_COLOR * LIGHT1_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT1_SIZE) / (sun_angle_max - LIGHT1_SIZE);
			sky = mix(LIGHT1_COLOR * LIGHT1_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT2_ENABLED) {
		float sun_angle = acos(dot(LIGHT2_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT2_SIZE) {
			sky = LIGHT2_COLOR * LIGHT2_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT2_SIZE) / (sun_angle_max - LIGHT2_SIZE);
			sky = mix(LIGHT2_COLOR * LIGHT2_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT3_ENABLED) {
		float sun_angle = acos(dot(LIGHT3_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT3_SIZE) {
			sky = LIGHT3_COLOR * LIGHT3_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT3_SIZE) / (sun_angle_max - LIGHT3_SIZE);
			sky = mix(LIGHT3_COLOR * LIGHT3_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	vec4 sky_cover_texture = texture(sky_cover, SKY_COORDS);
	sky += (sky_cover_texture.rgb * sky_cover_modulate.rgb) * sky_cover_texture.a * sky_cover_modulate.a * sky_energy;

	c = (v_angle - (PI * 0.5)) / (PI * 0.5);
	vec3 ground = mix(ground_horizon_color.rgb, ground_bottom_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / ground_curve), 0.0, 1.0));
	ground *= ground_energy;

	vec2 sky_uv = EYEDIR.xz / EYEDIR.y;
	vec3 clouds = texture(cloud_texture, (sky_uv*cloud_scale) + (TIME*cloud_direction*cloud_speed*.01)).rgb - texture(cloud_texture2, (sky_uv * cloud_scale) + (TIME * cloud_direction2 * cloud_speed2*.01)).rgb;
	clouds = clouds - smoothstep(0.0, EYEDIR.y, cloud_distance);
	clouds = clamp(clouds,0,1);
	sky += clouds;
	
	COLOR = mix(ground, sky, step(0.0, EYEDIR.y)) * exposure;
}
"

[sub_resource type="Gradient" id="Gradient_w48qg"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_vivmo"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_2cqfq"]
width = 1024
height = 1024
seamless = true
color_ramp = SubResource("Gradient_w48qg")
noise = SubResource("FastNoiseLite_vivmo")

[sub_resource type="Gradient" id="Gradient_yaehf"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_074og"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_cegan"]
width = 1024
height = 1024
seamless = true
color_ramp = SubResource("Gradient_yaehf")
noise = SubResource("FastNoiseLite_074og")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_vivmo"]
shader = SubResource("Shader_w48qg")
shader_parameter/sky_top_color = Color(0.385, 0.454, 0.55, 1)
shader_parameter/sky_horizon_color = Color(0.6463, 0.6558, 0.6708, 1)
shader_parameter/sky_curve = 0.0461679
shader_parameter/sky_energy = 1.0
shader_parameter/sky_cover_modulate = Color(1, 1, 1, 1)
shader_parameter/ground_bottom_color = Color(0.413049, 0.371867, 0.681269, 1)
shader_parameter/ground_horizon_color = Color(0.597048, 0.658624, 0.764945, 1)
shader_parameter/ground_curve = 0.0746429
shader_parameter/ground_energy = 1.0
shader_parameter/sun_angle_max = 0.523599
shader_parameter/sun_curve = 0.15
shader_parameter/exposure = 1.0
shader_parameter/cloud_texture = SubResource("NoiseTexture2D_2cqfq")
shader_parameter/cloud_texture2 = SubResource("NoiseTexture2D_cegan")
shader_parameter/cloud_direction = Vector2(1, 0)
shader_parameter/cloud_direction2 = Vector2(0, 1)
shader_parameter/cloud_scale = Vector2(0.1, 0.1)
shader_parameter/cloud_distance = 0.02
shader_parameter/cloud_speed = 1.0
shader_parameter/cloud_speed2 = 0.1

[sub_resource type="Sky" id="Sky_vivmo"]
sky_material = SubResource("ShaderMaterial_vivmo")

[sub_resource type="Environment" id="Environment_2cqfq"]
background_mode = 2
sky = SubResource("Sky_vivmo")

[sub_resource type="CameraAttributesPractical" id="CameraAttributesPractical_ig7tw"]

[sub_resource type="Compositor" id="Compositor_0xm2m"]

[sub_resource type="BoxShape3D" id="BoxShape3D_yaehf"]
size = Vector3(40, 10, 60)

[node name="Node3D" type="Node3D"]
script = ExtResource("1_7mycd")

[node name="XROrigin3D" type="XROrigin3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.7, 0)
script = ExtResource("2_efxa6")

[node name="LeftHand" type="XRController3D" parent="XROrigin3D"]
tracker = &"left_hand"

[node name="LeftHand" parent="XROrigin3D/LeftHand" instance=ExtResource("2_272bh")]

[node name="XRToolsFunctionPickup" type="Node3D" parent="XROrigin3D/LeftHand"]
script = ExtResource("4_dg77c")
metadata/_custom_type_script = "uid://bybh8edth7egy"

[node name="RightHand" type="XRController3D" parent="XROrigin3D"]
tracker = &"right_hand"

[node name="RightHand" parent="XROrigin3D/RightHand" instance=ExtResource("3_5vw27")]

[node name="MovementDirect" parent="XROrigin3D/RightHand" instance=ExtResource("4_5vw27")]

[node name="MovementTurn" parent="XROrigin3D/RightHand" instance=ExtResource("5_kek77")]
turn_mode = 2

[node name="XRToolsFunctionPickup" type="Node3D" parent="XROrigin3D/RightHand"]
script = ExtResource("4_dg77c")
metadata/_custom_type_script = "uid://bybh8edth7egy"

[node name="PlayerBody" parent="XROrigin3D" instance=ExtResource("1_lquwl")]
disable_mode = 2
floor_stop_on_slope = false
floor_snap_length = 0.2

[node name="XRCamera3D" type="XRCamera3D" parent="XROrigin3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_2cqfq")
camera_attributes = SubResource("CameraAttributesPractical_ig7tw")
compositor = SubResource("Compositor_0xm2m")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.582496, -0.679776, 0.44565, 0.44886, 0.726099, 0.520869, -0.67766, -0.103369, 0.728074, 1.82607, 3.34388, 0)
shadow_enabled = true

[node name="fence" parent="." instance=ExtResource("14_w48qg")]
transform = Transform3D(0.451672, 0, 0.892184, 0, 1, 0, -0.892184, 0, 0.451672, -2.05234, 9.53674e-07, 17.9734)

[node name="fall_catch_area" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -20, 0)
collision_layer = 4
collision_mask = 196615
script = ExtResource("12_w48qg")

[node name="CollisionShape3D" type="CollisionShape3D" parent="fall_catch_area"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 5)
shape = SubResource("BoxShape3D_yaehf")

[node name="till" parent="." instance=ExtResource("17_yaehf")]
transform = Transform3D(-0.124918, 0, -0.992167, 0, 1, 0, 0.992167, 0, -0.124918, 0.838, 0, -3.36)

[node name="stone1" parent="." instance=ExtResource("15_074og")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.77739, 0.193152, 13.1336)

[node name="stone2" parent="." instance=ExtResource("16_cegan")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3.33955, 0.193151, 15.2799)

[node name="stone3" parent="." instance=ExtResource("17_82xsv")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.444389, 0.193151, 12.0404)

[node name="bridge" parent="." instance=ExtResource("19_cegan")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.19987, 0.103327, 9.10736)

[node name="tree1" parent="." instance=ExtResource("18_getpj")]
transform = Transform3D(0.772545, 0, 0.63496, 0, 1, 0, -0.63496, 0, 0.772545, 2.04586, 0, 16.2446)

[node name="player_island" parent="." instance=ExtResource("20_82xsv")]

[node name="small_island" parent="." instance=ExtResource("18_074og")]
transform = Transform3D(-0.00159564, -2.07998e-05, -0.999999, -0.000390679, 1, -2.01577e-05, 0.999999, 0.000390645, -0.00159565, -0.553859, 0, 14.8014)

[node name="Bookshelf" parent="." instance=ExtResource("19_82xsv")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2, 0, -2)

[node name="player_island2" parent="." instance=ExtResource("20_82xsv")]
